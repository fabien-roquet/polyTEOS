function [specvol,alpha,beta,v0,delta] = polyTEOS10_75t(SA,CT,p)
% polyTEOS10_75t              specific volume (75-term polynomial equation)
%==========================================================================
%
% USAGE:
%     [specvol,alpha,beta,v0,delta] = polyTEOS10_75t(SA,CT,p)
%
% DESCRIPTION:
%  Calculates specific volume from Absolute Salinity, Conservative
%  Temperature and pressure, using the computationally-efficient 75-term
%  polynomial expression for density (Roquet et al., 2014).
%
%  Note that the 75-term equation has been fitted in a restricted range of
%  parameter space, and is most accurate inside the "oceanographic funnel"
%  described in McDougall et al. (2003).  The GSW library function
%  "gsw_infunnel(SA,CT,p)" is available to be used if one wants to test if
%  some of one's data lies outside this "funnel".
%
% INPUT:
%  SA  =  Absolute Salinity                                        [ g/kg ]
%  CT  =  Conservative Temperature (ITS-90)                       [ deg C ]
%  p   =  sea pressure                                             [ dbar ]
%         ( i.e. absolute pressure - 10.1325 dbar )
%
%  SA & CT & p need to have the same dimensions.
%
% OUTPUT:
%  specvol   =  specific volume                                  [ m^3/kg ]
%  alpha     =  Thermal expansion  (=v.dv/dCT)                      [ 1/K ]
%  beta      =  Haline contraction (=-v.dv/dSA)                [ 1/(g/kg) ]
%  v0        =  vertical reference specific volume               [ m^3/kg ]
%  delta     =  specific volume anomaly (specvol = v0 + delta)   [ m^3/kg ]
%
% CHECK VALUES (SA=30g/kg, CT=10degC, p=1e3dbar):
%  specvol = 9.732819628e-04
%  alpha   = 1.748439401e-04
%  beta    = 7.451213159e-04
%  v0      = -4.333016903e-06
%  delta   = 9.776149797e-04
%
% REFERENCES:
%  Roquet, F., Madec, G., McDougall, T. J., Barker, P. M., 2014: Accurate 
%   polynomial expressions for the density and specific volume of 
%   seawater using the TEOS-10 standard. Ocean Modelling.
%  McDougall, T. J., D. R. Jackett, D. G. Wright and R. Feistel, 2003: 
%   Accurate and computationally efficient algorithms for potential 
%   temperature and density of seawater.  Journal of Atmospheric and 
%   Oceanic Technology, 20, 730-741. 
%
% AUTHOR:
%  Fabien Roquet
%  jan 2015

% reduced variables
SAu = 40*35.16504/35; CTu = 40; Pu=1e4; deltaS = 24;
ss  = sqrt ( (SA+deltaS)/SAu );
tt  = CT / CTu ;
pp  = p / Pu ;

% vertical reference profile of specific volume
V00 = -4.4015007269e-05; V01 = 6.9232335784e-06; V02 = -7.5004675975e-07;
V03 = 1.7009109288e-08; V04 = -1.6884162004e-08; V05 = 1.9613503930e-09;
v0  = (((((V05.*pp+V04).*pp+V03 ).*pp+V02 ).*pp+V01).*pp+V00).*pp ;

% specific volume anomaly
V000 = 1.0769995862e-03; V100 = -3.1038981976e-04; V200 = 6.6928067038e-04; 
V300 = -8.5047933937e-04; V400 = 5.8086069943e-04; V500 = -2.1092370507e-04; 
V600 = 3.1932457305e-05; V010 = -1.5649734675e-05; V110 = 3.5009599764e-05; 
V210 = -4.3592678561e-05; V310 = 3.4532461828e-05; V410 = -1.1959409788e-05; 
V510 = 1.3864594581e-06; V020 = 2.7762106484e-05; V120 = -3.7435842344e-05; 
V220 = 3.5907822760e-05; V320 = -1.8698584187e-05; V420 = 3.8595339244e-06; 
V030 = -1.6521159259e-05; V130 = 2.4141479483e-05; V230 = -1.4353633048e-05; 
V330 = 2.2863324556e-06; V040 = 6.9111322702e-06; V140 = -8.7595873154e-06; 
V240 = 4.3703680598e-06; V050 = -8.0539615540e-07; V150 = -3.3052758900e-07; 
V060 = 2.0543094268e-07; V001 = -1.6784136540e-05; V101 = 2.4262468747e-05; 
V201 = -3.4792460974e-05; V301 = 3.7470777305e-05; V401 = -1.7322218612e-05; 
V501 = 3.0927427253e-06; V011 = 1.8505765429e-05; V111 = -9.5677088156e-06; 
V211 = 1.1100834765e-05; V311 = -9.8447117844e-06; V411 = 2.5909225260e-06; 
V021 = -1.1716606853e-05; V121 = -2.3678308361e-07; V221 = 2.9283346295e-06; 
V321 = -4.8826139200e-07; V031 = 7.9279656173e-06; V131 = -3.4558773655e-06; 
V231 = 3.1655306078e-07; V041 = -3.4102187482e-06; V141 = 1.2956717783e-06; 
V051 = 5.0736766814e-07; V002 = 3.0623833435e-06; V102 = -5.8484432984e-07; 
V202 = -4.8122251597e-06; V302 = 4.9263106998e-06; V402 = -1.7811974727e-06; 
V012 = -1.1736386731e-06; V112 = -5.5699154557e-06; V212 = 5.4620748834e-06; 
V312 = -1.3544185627e-06; V022 = 2.1305028740e-06; V122 = 3.9137387080e-07; 
V222 = -6.5731104067e-07; V032 = -4.6132540037e-07; V132 = 7.7618888092e-09; 
V042 = -6.3352916514e-08; V003 = -3.8088938393e-07; V103 = 3.6310188515e-07; 
V203 = 1.6746303780e-08; V013 = -3.6527006553e-07; V113 = -2.7295696237e-07; 
V023 = 2.8695905159e-07; V004 = 8.8302421514e-08; V104 = -1.1147125423e-07; 
V014 = 3.1454099902e-07; V005 = 4.2369007180e-09; 

vp5 = V005 ;
vp4 = V014.*tt + V104.*ss + V004 ;
vp3 = ( V023.*tt + V113.*ss + V013 ).*tt ...
    + ( V203.*ss + V103 ).*ss + V003 ;
vp2 = ( ( ( V042.*tt + V132.*ss + V032 ).*tt ...
    + ( V222.*ss + V122 ).*ss + V022 ).*tt ...
    + ( ( V312.*ss + V212 ).*ss + V112 ).*ss + V012 ).*tt ...
    + ( ( ( V402.*ss + V302 ).*ss + V202 ).*ss + V102 ).*ss + V002 ;
vp1 = ( ( ( ( V051.*tt + V141.*ss + V041 ).*tt ...
    + ( V231.*ss + V131 ).*ss + V031 ).*tt ...
    + ( ( V321.*ss + V221 ).*ss + V121 ).*ss + V021 ).*tt ...
    + ( ( ( V411.*ss + V311 ).*ss + V211 ).*ss + V111 ).*ss + V011 ).*tt ...
    + ( ( ( ( V501.*ss + V401 ).*ss + V301 ).*ss + V201 ).*ss + V101 ).*ss + V001 ;
vp0 = ( ( ( ( ( V060.*tt + V150.*ss + V050 ).*tt ...
    + ( V240.*ss + V140 ).*ss + V040 ).*tt ...
    + ( ( V330.*ss + V230 ).*ss + V130 ).*ss + V030 ).*tt ...
    + ( ( ( V420.*ss + V320 ).*ss + V220 ).*ss + V120 ).*ss + V020 ).*tt ...
    + ( ( ( ( V510.*ss + V410 ).*ss + V310 ).*ss + V210 ).*ss + V110 ).*ss + V010 ).*tt ...
    + ((((( V600.*ss + V500 ).*ss + V400 ).*ss + V300 ).*ss + V200 ).*ss + V100 ).*ss + V000 ;
delta = ( ( ( ( vp5.*pp + vp4 ).*pp + vp3 ).*pp + vp2 ).*pp + vp1 ).*pp + vp0 ;

% specific volume
specvol = v0 + delta ;

% alpha
A000 = -3.9124336688e-07; A100 = 8.7523999410e-07; A200 = -1.0898169640e-06; 
A300 = 8.6331154570e-07; A400 = -2.9898524469e-07; A500 = 3.4661486454e-08; 
A010 = 1.3881053242e-06; A110 = -1.8717921172e-06; A210 = 1.7953911380e-06; 
A310 = -9.3492920933e-07; A410 = 1.9297669622e-07; A020 = -1.2390869444e-06; 
A120 = 1.8106109612e-06; A220 = -1.0765224786e-06; A320 = 1.7147493417e-07; 
A030 = 6.9111322702e-07; A130 = -8.7595873154e-07; A230 = 4.3703680598e-07; 
A040 = -1.0067451943e-07; A140 = -4.1315948624e-08; A050 = 3.0814641402e-08; 
A001 = 4.6264413572e-07; A101 = -2.3919272039e-07; A201 = 2.7752086911e-07; 
A301 = -2.4611779461e-07; A401 = 6.4773063150e-08; A011 = -5.8583034263e-07; 
A111 = -1.1839154180e-08; A211 = 1.4641673148e-07; A311 = -2.4413069600e-08; 
A021 = 5.9459742130e-07; A121 = -2.5919080242e-07; A221 = 2.3741479559e-08; 
A031 = -3.4102187482e-07; A131 = 1.2956717783e-07; A041 = 6.3420958518e-08; 
A002 = -2.9340966828e-08; A102 = -1.3924788639e-07; A202 = 1.3655187208e-07; 
A302 = -3.3860464067e-08; A012 = 1.0652514370e-07; A112 = 1.9568693540e-08; 
A212 = -3.2865552033e-08; A022 = -3.4599405028e-08; A122 = 5.8214166069e-10; 
A032 = -6.3352916514e-09; A003 = -9.1317516382e-09; A103 = -6.8239240593e-09; 
A013 = 1.4347952579e-08; A004 = 7.8635249756e-09; 

ap4 = A004;
ap3 = A013.*tt+A103.*ss+A003;
ap2 = ((A032.*tt+A122.*ss+A022).*tt	...
	+ (A212.*ss+A112).*ss+A012).*tt	...
	+ ((A302.*ss+A202).*ss+A102).*ss+A002;
ap1 = (((A041.*tt+A131.*ss+A031).*tt	...
	+ (A221.*ss+A121).*ss+A021).*tt	...
	+ ((A311.*ss+A211).*ss+A111).*ss+A011).*tt	...
	+ (((A401.*ss+A301).*ss+A201).*ss+A101).*ss+A001;
ap0 = ((((A050.*tt+A140.*ss+A040).*tt	...
	+ (A230.*ss+A130).*ss+A030).*tt	...
	+ ((A320.*ss+A220).*ss+A120).*ss+A020).*tt	...
	+ (((A410.*ss+A310).*ss+A210).*ss+A110).*ss+A010).*tt	...
	+ ((((A500.*ss+A400).*ss+A300).*ss+A200).*ss+A100).*ss+A000;

a = ( ( ( ap4.*pp + ap3 ).*pp + ap2 ).*pp + ap1 ).*pp + ap0 ;
alpha = a ./ specvol;

% beta
B000 = 3.8616633493e-06; B100 = -1.6653488424e-05; B200 = 3.1743292000e-05; 
B300 = -2.8906727363e-05; B400 = 1.3120861084e-05; B500 = -2.3836941584e-06; 
B010 = -4.3556611614e-07; B110 = 1.0847021286e-06; B210 = -1.2888896515e-06; 
B310 = 5.9516403589e-07; B410 = -8.6247024451e-08; B020 = 4.6575180991e-07; 
B120 = -8.9348241648e-07; B220 = 6.9790598120e-07; B320 = -1.9207099914e-07; 
B030 = -3.0035220418e-07; B130 = 3.5715667939e-07; B230 = -8.5335075632e-08; 
B040 = 1.0898094956e-07; B140 = -1.0874641554e-07; B050 = 4.1122040579e-09; 
B001 = -3.0185747199e-07; B101 = 8.6572923996e-07; B201 = -1.3985593422e-06; 
B301 = 8.6204601419e-07; B401 = -1.9238922270e-07; B011 = 1.1903505888e-07; 
B111 = -2.7621838107e-07; B211 = 3.6744403581e-07; B311 = -1.2893812777e-07; 
B021 = 2.9458973764e-09; B121 = -7.2864777086e-08; B221 = 1.8223868848e-08; 
B031 = 4.2995723805e-08; B131 = -7.8766845761e-09; B041 = -1.6119885062e-08; 
B002 = 7.2762435164e-09; B102 = 1.1974099887e-07; B202 = -1.8386962715e-07; 
B302 = 8.8641889138e-08; B012 = 6.9297177307e-08; B112 = -1.3591099350e-07; 
B212 = 5.0552320246e-08; B022 = -4.8692129590e-09; B122 = 1.6355652107e-08; 
B032 = -9.6568249433e-11; B003 = -4.5174717490e-09; B103 = -4.1669270980e-10; 
B013 = 3.3959486762e-09; B004 = 1.3868510806e-09; 

bp4 = B004;
bp3 = B013.*tt+B103.*ss+B003;
bp2 = ((B032.*tt+B122.*ss+B022).*tt	...
	+ (B212.*ss+B112).*ss+B012).*tt	...
	+ ((B302.*ss+B202).*ss+B102).*ss+B002;
bp1 = (((B041.*tt+B131.*ss+B031).*tt	...
	+ (B221.*ss+B121).*ss+B021).*tt	...
	+ ((B311.*ss+B211).*ss+B111).*ss+B011).*tt	...
	+ (((B401.*ss+B301).*ss+B201).*ss+B101).*ss+B001;
bp0 = ((((B050.*tt+B140.*ss+B040).*tt	...
	+ (B230.*ss+B130).*ss+B030).*tt	...
	+ ((B320.*ss+B220).*ss+B120).*ss+B020).*tt	...
	+ (((B410.*ss+B310).*ss+B210).*ss+B110).*ss+B010).*tt	...
	+ ((((B500.*ss+B400).*ss+B300).*ss+B200).*ss+B100).*ss+B000;

b = ( ( ( bp4.*pp + bp3 ).*pp + bp2 ).*pp + bp1 ).*pp + bp0 ;
beta = b ./ ss ./ specvol;






